--------------------------------------------------------------------------------
Running it against the example_app:
--------------------------------------------------------------------------------

START pntest so the zmq server is running!

`cd example_app && docker-compose up`

`python src/testdocker.py`

Start pntest.

`docker container ls
docker exec -it dc9e4130fd48 bash
`

Now make a request somewhere i.e.
`
curl http://www.synack.com
curl http://frontend
`

--------------------------------------------------------------------------------
Developing
--------------------------------------------------------------------------------

Start the proxy container with a volume:
`
docker run -i -t --privileged -p 3001:3001 -v /Users/evan/Code/pntest/docker_proxy/mitmproxy:/app/mitmproxy pntest-proxy:latest
`
docker run -i -t --privileged -p 3001:3001 pntest-proxy:latest
--------------------------------------------------------------------------------
TODO:
--------------------------------------------------------------------------------
DONE do not rely on cmd line args for the proxy?
DONE add a proper cmd line args parser (add the zmq_host arg), and pass the args in from Docker using ENV vars
DONE include ssh certs
DONE figure out how we're going to copy the files from ./src to ./docker_proxy?

Thursday:
- dynamically set the network for the proxy containers
- make the addon.py code uniform for docker proxies vs normal proxies

- integerate docker with the client models/repo in pntest (do we need a new model?)
- what happens when you close pntest? what do we do then with the containers?
- GUI to start/monitor docker proxies
- need to check that all containers are on the same network?
- need to close the orphaned containers on exit
